{
  "name": "droplet",
  "main": "src/index.js",
  "scripts": {
    "dev:start": "nodemon --ext pem,js,json --watch .env --watch . --exec \"npm run start\"",
    "prestart": "npm run migrations",
    "start": "node --trace-warnings -r esm src/index.js",
    "preinstall": "pip3 install -r src/services/AudioEngine/Filters/requirements.txt",
    "migrations": "node --trace-warnings -r esm ./node_modules/sequelize-cli/lib/sequelize db:migrate --config src/models/config/config.js --migrations-path src/models/migrations --models-path src/models",
    "make:model": "node --trace-warnings -r esm ./node_modules/sequelize-cli/lib/sequelize model:generate --name EditThisModel --attributes editThis:string,alsoEditThis:string,andThis:string --config src/models/config/config.js --migrations-path src/models/migrations --models-path src/models",
    "create:JWTKeys": "test ! -e src/.private.pem && openssl genrsa -out src/.private.pem 4096 && openssl rsa -in src/.private.pem -pubout > src/.public.pem",
    "lint": "eslint --fix .",
    "fix:speaker": "sudo apt-get install nodejs-legacy",
    "preproduction": "npm run create:JWTKeys && sudo npm install --global pm2@4.5.6 && pm2 start npm --name \"Droplet Drop Service\" -- start",
    "production": "pm2 stop \"Droplet Drop Service\" && pm2 delete \"Droplet Drop Service\" && pm2 start npm --name \"Droplet Drop Service\" -- start && pm2 save",
    "postproduction": "npm run production:restartup && pm2 list && pm2 log",
    "production:restartup": "sudo env pm2 startup systemd -u $USER --hp ~",
    "production:prep:install": "git stash && git stash drop | echo \"Stashed and Dropped\"",
    "NOTE": "It's important to leave the start in the preproduction script because build processes will fail if there is no pm2 app named \"Droplet Drop Service\""
  },
  "dependencies": {
    "@sentry/node": "^6.3.4",
    "@sentry/tracing": "^6.3.4",
    "audio-decode": "^1.4.0",
    "audiobuffer-to-wav": "^1.0.0",
    "cors": "^2.8.5",
    "cronstrue": "^1.112.0",
    "csv-writer": "^1.6.0",
    "dotenv": "^8.2.0",
    "esm": "^3.2.25",
    "express": "^4.17.1",
    "express-jwt": "^6.0.0",
    "express-validator": "^6.10.1",
    "firebase": "^8.4.2",
    "firebase-admin": "^9.7.0",
    "morgan": "^1.10.0",
    "mysql2": "^2.2.5",
    "node-cron": "^3.0.0",
    "node-fetch": "^2.6.1",
    "node-lame": "^1.3.1",
    "python-shell": "^3.0.0",
    "sequelize": "6.6.2",
    "sequelize-cli": "6.2.0",
    "uuid": "^8.3.2",
    "web-audio-api": "^0.2.2"
  },
  "devDependencies": {
    "@babel/preset-env": "7.12.1",
    "babel-eslint": "10.1.0",
    "babel-jest": "26.6.1",
    "eslint": "7.16.0",
    "jest": "26.6.0",
    "nodemon": "^2.0.7",
    "supertest": "^6.1.3"
  },
  "license": "UNLICENSED"
}
